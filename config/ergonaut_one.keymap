#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        m_elpipe: m_elpipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp GT &kp SPACE>;
            label = "M_ELPIPE";
        };

        m_insl: m_insl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp N &kp S &kp L>;
            label = "M_INSL";
        };

        m_leq: m_leq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp LT &kp EQUAL &kp SPACE>;
            label = "Less Equal";
        };

        m_req: m_req {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp EQUAL &kp GT &kp SPACE>;
            label = "More Equal";
        };

        m_elmap: m_elmap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PRCNT &kp LEFT_BRACE &kp SPACE>;
            label = "Elixir map";
        };

        m_ldsh: m_ldsh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp LT &kp MINUS &kp SPACE>;
            label = "Left Arrow";
        };

        m_rdsh: m_rdsh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp MINUS &kp GT &kp SPACE>;
            label = "Right Arrow";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI RBKT    &kp Q  &kp W  &kp E        &kp R            &kp T        &kp Y        &kp U           &kp I          &kp O    &kp P     &mt RGUI LBKT
&mt LCTRL GRAVE  &kp A  &kp S  &kp D        &kp F            &kp G        &kp H        &kp J           &kp K          &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT MINUS   &kp Z  &kp X  &kp C        &kp V            &kp B        &kp N        &kp M           &kp COMMA      &kp DOT  &kp FSLH  &mt RALT BSLH
                               &lt RSE TAB  &mt LSHFT SPACE  &lt LWR RET  &lt LWR ESC  &mt RSHFT BSPC  &lt RSE GLOBE
            >;
        };

        lower_layer {
            bindings = <
&kp LGUI        &m_elmap  &m_ldsh  &kp MINUS  &m_rdsh   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &m_leq    &kp EQUAL  &m_req    &m_insl   &kp RGUI
&kp LCTRL       &kp EXCL  &kp AT   &kp HASH   &kp DLLR  &kp PRCNT         &kp CARET          &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &kp RCTRL
&mt LALT EQUAL  &kp N1    &kp N2   &kp N3     &kp N4    &kp N5            &kp N6             &kp N7    &kp N8     &kp N9    &kp N0    &m_elpipe
                                   &trans     &trans    &trans            &trans             &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI F1  &kp F2     &kp F3    &kp F4    &kp F5     &kp F6         &kp F7        &kp F8        &kp F9            &kp F10       &kp F11    &mt RGUI F12
&kp LCTRL    &kp PLUS   &kp LEFT  &kp UP    &kp RIGHT  &kp PAGE_UP    &kp C_BRI_UP  &kp C_VOL_UP  &kp C_MUTE        &kp C_VOL_DN  &kp MINUS  &kp RCTRL
&kp LALT     &kp EQUAL  &kp HOME  &kp DOWN  &kp END    &kp PAGE_DOWN  &kp C_BRI_DN  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &kp UNDER  &kp RALT
                                  &trans    &trans     &trans         &trans        &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
